## COMPOSITION WITH UID [/ehr/{ehr_id}/composition/withuid]

This resource is used for clients which provides the `Composition.uid`. 
This functionality is separated to an separate path to not mix the different modes. The intention is to make it more explisit and easy for client developers to choose the right path. 

### Create composition [POST /ehr/{ehr_id}/composition/withuid]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value

+ Request with representation (application/json)

    + Body

<!-- include(../examples/composition_01.json) -->

    + Headers

            Prefer: return={representation|minimal}

+ Response 201 (application/json)

    New COMPOSITION was created. Content body is only returned when `Prefer` header has `return=representation`, otherwise only headers are returned.

    + Headers

            Location: /ehr/{ehr_id}/composition/withuid/{version_uid}
            ETag: {version_uid}

    + Body

<!-- include(../examples/composition_01.json) -->

+ Request wrong type (application/json)

    + Body

<!-- include(../examples/wrong_type_01.json) -->

+ Response 400

    `400 Bad Request` either the body of the request could not be read (or converted to a COMPOSITION object) or there were COMPOSITION validation errors.

    + Body

            { /* see overview */
                "message": "Error message",
                "validationErrors": [
                    "error1", "error2"
                ]
            }

+ Response 404

    No EHR with the supplied `ehr_id`.

    + Body


### Update composition [PUT /ehr/{ehr_id}/composition/withuid/{preceding_version_uid}]

The Composition in the request body MUST contain  a composition uid and it  MUST match the
`preceding_version_uid` in the URL.

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value
    + `preceding_version_uid` (string) - identifier of the COMPOSITION to be updated.
    This MUST be the last (most recent) version.

+ Request with full representation (application/json)

    + Body

            {
                "_type": "COMPOSITION",
                "name": {
                    "_type": "DV_TEXT",
                    "value": "Vital Signs"
                },
                ...
            }

    + Headers

            Prefer: return={representation|minimal}

+ Response 200 (application/json)

    + Headers

            Location: /ehr/{ehr_id}/composition/withuid/{version_uid}
            ETag: {version_uid}

    + Body

            {
                "_type": "COMPOSITION",
                "name": {
                    "_type": "DV_TEXT",
                    "value": "Vital Signs"
                },
                ...
            }

+ Request no content (application/json)

    + Body

            {
                "_type": "COMPOSITION",
                "name": {
                    "_type": "DV_TEXT",
                    "value": "Vital Signs"
                },
                ...
            }

    + Headers

            Match-If: {preceding_version_uid}

+ Response 204

    + Headers

            Location: /ehr/{ehr_id}/composition/withuid/{version_uid}
            ETag: {version_uid}

+ Request wrong type (application/json)

    + Headers

            Match-If: {preceding_version_uid}

    + Body

<!-- include(../examples/wrong_type_01.json) -->

+ Response 400 (application/json)

    Bad request: either the body of the request could not be read (or converted to a COMPOSITION object) or there were composition validation errors.

    + Body

            {
                "message": "Error message",
                "validationErrors": [
                    "error1", "error2"
                ]
            }

+ Request not found (application/json)

    + Body

            {
                "_type": "COMPOSITION",
                "name": {
                    "_type": "DV_TEXT",
                    "value": "Vital Signs"
                },
                ...
            }

    + Headers

            Match-If: {preceding_version_uid}

+ Response 404

    No EHR with the supplied `ehr_id` or no COMPOSITION with the supplied `object_id`.

    + Body

+ Request version conflict (application/json)

    + Body

            {
                "_type": "COMPOSITION",
                "name": {
                    "_type": "DV_TEXT",
                    "value": "Vital Signs"
                },
                ...
            }

    + Headers

            Match-If: {preceding_version_uid}

+ Response 409

    Returned when supplied `version_uid` is not the latest version.
    Returns latest version in the `Location` and `ETag` headers.

    + Headers

            Location: /ehr/{ehr_id}/composition/withuid/{version_uid}
            ETag: {version_uid}

    + Body

### Delete composition [DELETE /ehr/{ehr_id}/composition/withuid/{preceding_version_uid}]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value
    + `preceding_version_uid` (string) - identifier of the COMPOSITION to be updated.
    This MUST be the last (most recent) version.

+ Request


+ Response 204

    COMPOSITION was deleted.

    + Headers

            Location: /ehr/{ehr_id}/composition/withuid/{version_uid}
            ETag: {version_uid}

    + Body

+ Response 400

    The composition with `preceding_version_uid` is already deleted.

    + Body

+ Response 404

    No EHR with the supplied `ehr_id` or no COMPOSITION with the supplied `preceding_version_uid`.

    + Body

+ Response 409

    Returned when supplied `preceding_version_uid` doesn't match the latest version.
    Returns latest version in the `Location` and `ETag` headers.

    + Headers

            Location: /ehr/{ehr_id}/composition/withuid/{version_uid}
            ETag: {version_uid}

    + Body


### Get composition by version id [GET /ehr/{ehr_id}/composition/withuid/{version_uid}]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value
    + `version_uid` (string) - VERSION identifier

+ Response 200 (application/json)

    + Body

            {
                "name": {
                    "_type": "DV_TEXT",
                    "value": "Vital Signs"
                },
                ...
            }

+ Response 204 (application/json)

    Returned when the composition is deleted (logically).

    + Body

+ Response 404

    No EHR with the supplied `ehr_id` or no COMPOSITION with the supplied `version_uid`.

    + Body

### Get composition at time [GET /ehr/{ehr_id}/composition/withuid/{versioned_object_uid}{?version_at_time}]

+ Parameters

    + `ehr_id` (string) - EHR identifier taken from EHR.ehr_id.value
    + `versioned_object_uid` (string) - VERSIONED_COMPOSITION identifier taken from COMPOSITION.uid.value
    + `version_at_time` (string, optional) - A timestamp in the ISO 8601 format

+ Response 200 (application/json)

    + Headers

            Location: /ehr/{ehr_id}/composition/withuid/{version_uid}
            ETag: {version_uid}

    + Body

            {
                "_type": "COMPOSITION",
                "name": {
                    "_type": "DV_TEXT",
                    "value": "Vital Signs"
                },
                ...
            }

+ Response 204 (application/json)

    The COMPOSITION at specified `version_at_time` time has been deleted.

    + Body

+ Response 404

    No EHR with the supplied `ehr_id` or no VERSIONED_COMPOSITION with the supplied `versioned_object_uid` or
    no COMPOSITION at specified `version_at_time` time.

    + Body
