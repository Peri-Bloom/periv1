## Execute Query [/query]

This currently supports [AQL](https://specifications.openehr.org/releases/QUERY/latest/AQL.html) queries only, 
other query types might be added in the future. 


### Execute ad-hoc (non-stored) AQL query [GET /query/aql{?q,ehr_id,offset,fetch,query_parameter}]

Execute ad-hoc query, supplied by `q` parameter,
fetching `fetch` numbers of rows from `offset` and passing `query_parameter` to the underlying query engine.

See also details on usage of [query parameters](query.html#requirements-common-headers-and-query-parameters). 

+ Parameters
    + q: `SELECT ... WHERE ...` (string) - the AQL query to be executed
    + ehr_id: `7d44b88c-4199-4bad-97dc-d78268e01398` (string, optional) - an optional parameter to execute the query within an EHR context
    + offset: `10` (number, optional) - row number in result-set to start result-set from (`0`-based), default `0`
    + fetch: `10` (number, optional) - number of rows to fetch, default depends on the implementation
    + query_parameter (optional) - query parameters (can appear multiple times)

+ Response 200 (application/json)

    `200 OK` is returned when the server is able to execute the query.

    + Headers

            ETag: cdbb5db1-e466-4429-a9e5-bf80a54e120b

    + Body

<!-- include(../examples/query_resultset_01.json) -->

+ Response 400 

    `400 Bad Request` is returned when the server was unable to execute the query due to 
    invalid input, e.g. a request with missing `q` parameter or an invalid query syntax. 

    + Body

+ Response 408 

    `408 Request Timeout` is returned when there is a query execution timeout 
    (i.e. maximum query execution time reached, therefore the server aborted the execution of the query).
    
    + Body


### Execute ad-hoc (non-stored) AQL query [POST /query/aql]

Execute ad-hoc query, supplied by `q` attribute,
fetching `fetch` numbers of rows from `offset` and passing `query_parameter` to the underlying query engine.

See also details on usage of [query parameters](query.html#requirements-common-headers-and-query-parameters). 

+ Request (application/json)

    + Body

            {
                "q": "SELECT c FROM EHR e[ehr_id/value=$ehr_id] CONTAINS COMPOSITION c[openEHR-EHR-COMPOSITION.encounter.v1] CONTAINS OBSERVATION obs[openEHR-EHR-OBSERVATION.blood_pressure.v1] WHERE obs/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/magnitude >= $systolic_bp",
                "offset": 0,
                "fetch": 10,
                "query_parameters": {
                    "ehr_id": "7d44b88c-4199-4bad-97dc-d78268e01398", 
                    "systolic_bp": 140
                }
            }

+ Response 200 (application/json)

    `200 OK` is returned when the server is able to execute the AQL query.

    + Headers

            ETag: cdbb5db1-e466-4429-a9e5-bf80a54e120b

    + Body

<!-- include(../examples/query_resultset_01.json) -->

+ Response 400 

    `400 Bad Request` is returned when the server was unable to execute the query due to 
    invalid input, e.g. a request with missing `q` parameter or an invalid query syntax. 

    + Body

+ Response 408 

    `408 Request Timeout` is returned when there is a query execution timeout 
    (i.e. maximum query execution time reached, therefore the server aborted the execution of the query).

    + Body


### Execute stored query [GET /query/{qualified_query_name}/{version}{?ehr_id,offset,fetch,query_parameter}]

Execute a stored query, identified by the supplied `qualified_query_name` (at specified `version`),
fetching `fetch` numbers of rows from `offset` and passing `query_parameter` to the underlying query engine.

See also details on usage of [query parameters](query.html#requirements-common-headers-and-query-parameters). 

Queries can be stored or, once stored, their definition can be retrieved 
using the [definition endpoint](definitions.html#definitions-stored-query).

+ Parameters

    + qualified_query_name: `org.openehr::compositions` (string, required) - name of the query to be executed
    + version: `1.0` (string, optional) - query SEMVER version number
    + ehr_id: `7d44b88c-4199-4bad-97dc-d78268e01398` (string, optional) - an optional parameter to execute the query within an EHR context
    + offset: `10` (number, optional) - row number in result-set to start result-set from (`0`-based), default `0`
    + fetch: `10` (number, optional) - number of rows to fetch, default depends on the implementation
    + query_parameter (optional) - query parameters (can appear multiple times)

+ Response 200 (application/json)

    `200 OK` is returned when the server is able to execute the query.

    + Headers

            ETag: cdbb5db1-e466-4429-a9e5-bf80a54e120b

    + Body

<!-- include(../examples/query_resultset_01.json) -->

+ Response 400 

    `400 Bad Request` is returned when the server was unable to execute the query due to 
    invalid input, e.g. at least one of the parameters has an invalid syntax. 

    + Body

+ Response 404 

    `404 Not Found` is returned when a query with `qualified_query_name` and `version` does not exist.

    + Body

+ Response 408 

    `408 Request Timeout` is returned when there is a query execution timeout 
    (i.e. maximum query execution time reached, therefore the server aborted the execution of the query).

    + Body


### Execute stored query [POST /query/{qualified_query_name}/{version}]

Execute a stored query identified by the supplied `qualified_query_name` (at specified `version`).

See also details on usage of [query parameters](query.html#requirements-common-headers-and-query-parameters). 

Queries can be stored or, once stored, their definition can be retrieved 
using the [definition endpoint](definitions.html#definitions-stored-query).

+ Parameters

    + qualified_query_name: `org.openehr::compositions` (string, required) - name of the query to be executed
    + version: `1.0` (string, optional) - query SEMVER version number

+ Request (application/json)

    + Body

            {
                "offset": 0,
                "fetch": 10,
                "query_parameters": {
                    "ehr_id": "7d44b88c-4199-4bad-97dc-d78268e01398", 
                    "systolic_bp": 140
                }
            }

+ Response 200 (application/json)

    `200 OK` is returned when the server is able to execute the query.

    + Headers

            ETag: cdbb5db1-e466-4429-a9e5-bf80a54e120b

    + Body

<!-- include(../examples/query_resultset_01.json) -->

+ Response 400 

    `400 Bad Request` is returned when the server was unable to execute the query due to 
    invalid input, e.g. at least one of the parameters has an invalid syntax. 

    + Body

+ Response 404 

    `404 Not Found` is returned when a query with `qualified_query_name` and `version` does not exist. 

    + Body

+ Response 408 

    `408 Request Timeout` is returned when there is a query execution timeout 
    (i.e. maximum query execution time reached, therefore the server aborted the execution of the query).

    + Body
